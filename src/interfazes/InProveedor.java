/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfazes;

import clases.ConexionBs;
import java.awt.Color;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author ADMIN
 */
public class InProveedor extends javax.swing.JFrame {

    TableRowSorter trs;
    DefaultTableModel model = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };

    /**
     * Creates new form InProveedor
     */
    public InProveedor() {
        initComponents();
        this.setLocationRelativeTo(null);
        TextPrompt tpnpr = new TextPrompt("NIT", tNit);
        TextPrompt tpnamep = new TextPrompt("Nombre empresa", tnameprove);
        TextPrompt tpdip = new TextPrompt("Direccion", tdireccionpr);
        TextPrompt tptp = new TextPrompt("Telefono", tntelefopro);
        TextPrompt tpcp = new TextPrompt("Correo electronico", tcorreoprov);
        TextPrompt tpcons = new TextPrompt("NIT a buscar", tconss);
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Administracion de proveedores asociados - Sistema SME - Sesion de " +InicioSesion.usuario);
        try {
            Connection cn = ConexionBs.conectarb();
            PreparedStatement pst = cn.prepareStatement(
                    "select nit, proveedor, direccion, telefono, email from proveedor");
            ResultSet rs = pst.executeQuery();
            trproveeee = new JTable(model);
            jScrollPane2.setViewportView(trproveeee);
            model.addColumn("Nit");
            model.addColumn("Proveedor");
            model.addColumn("Direccion");
            model.addColumn("Telefono ");
            model.addColumn("Email");

            while (rs.next()) {
                Object[] fila = new Object[5];
                for (int i = 0; i < 5; i++) {
                    fila[i] = rs.getObject(i + 1);
                }
                model.addRow(fila);
            }
            cn.close();

        } catch (SQLException e) {
            System.err.println("Error al llenar tabla ");
            JOptionPane.showMessageDialog(null, "Error al mostrar informacion...");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lNpro = new javax.swing.JLabel();
        lnombrepro = new javax.swing.JLabel();
        ldirepro = new javax.swing.JLabel();
        lntelefpro = new javax.swing.JLabel();
        lemailpro = new javax.swing.JLabel();
        tNit = new javax.swing.JTextField();
        titledprove = new javax.swing.JLabel();
        tnameprove = new javax.swing.JTextField();
        tdireccionpr = new javax.swing.JTextField();
        tntelefopro = new javax.swing.JTextField();
        tcorreoprov = new javax.swing.JTextField();
        bregistr = new javax.swing.JButton();
        belimin = new javax.swing.JButton();
        tconss = new javax.swing.JTextField();
        lcons = new javax.swing.JLabel();
        bbuscar = new javax.swing.JButton();
        bmodifi = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        trproveeee = new javax.swing.JTable();
        lfbb = new javax.swing.JLabel();
        tfil = new javax.swing.JTextField();
        bll = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lNpro.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lNpro.setText("Ingresa el NIT del proveedor:");

        lnombrepro.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lnombrepro.setText("Ingresa el nombre de la empresa:");

        ldirepro.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ldirepro.setText("Ingresa la direccion:");

        lntelefpro.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lntelefpro.setText("Ingresa el numero de telefono:");

        lemailpro.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lemailpro.setText("Ingresa el correo electronico:");

        tNit.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tNit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tNitActionPerformed(evt);
            }
        });

        titledprove.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        titledprove.setText("Ingresar datos del proveedor");

        tnameprove.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tnameprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tnameproveActionPerformed(evt);
            }
        });

        tdireccionpr.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tdireccionpr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tdireccionprActionPerformed(evt);
            }
        });

        tntelefopro.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        tcorreoprov.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        bregistr.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bregistr.setText("Registrar");
        bregistr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bregistrActionPerformed(evt);
            }
        });

        belimin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        belimin.setText("Eliminar");
        belimin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                beliminActionPerformed(evt);
            }
        });

        tconss.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lcons.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lcons.setText("Ingresa el nit a consultar:");

        bbuscar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bbuscar.setText("Buscar");
        bbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bbuscarActionPerformed(evt);
            }
        });

        bmodifi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bmodifi.setText("Actualizar");
        bmodifi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bmodifiActionPerformed(evt);
            }
        });

        trproveeee.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(trproveeee);

        lfbb.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lfbb.setText("Filtro de busqueda:");

        tfil.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tfil.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfilKeyTyped(evt);
            }
        });

        bll.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bll.setText("Limpiar");
        bll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bllActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(183, 183, 183)
                        .addComponent(titledprove, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lNpro, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(lntelefpro, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lnombrepro, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(ldirepro, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(lcons)
                                .addComponent(lemailpro, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tconss, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(bbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(tcorreoprov, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tNit, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tnameprove, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tdireccionpr, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tntelefopro, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(42, 42, 42)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(belimin, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bmodifi, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(bregistr, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(lfbb, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfil, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(122, 122, 122)
                        .addComponent(bll, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(36, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(titledprove, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lNpro, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lnombrepro, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ldirepro, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(bregistr, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(bmodifi, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(21, 21, 21)
                            .addComponent(belimin, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(tNit, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(60, 60, 60))
                                .addComponent(tnameprove, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addComponent(tdireccionpr, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tntelefopro, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(lntelefpro, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(lemailpro, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(tcorreoprov, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(tconss, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lcons, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfil, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lfbb, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bll, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tnameproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tnameproveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tnameproveActionPerformed

    private void tdireccionprActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tdireccionprActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tdireccionprActionPerformed

    private void bregistrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bregistrActionPerformed
        String nnit, nombrep, correop, telefonop, direccionp;
        int valcampos = 0;
        nnit = tNit.getText().trim();
        nombrep = tnameprove.getText().trim();
        correop = tcorreoprov.getText().trim();
        telefonop = tntelefopro.getText().trim();
        direccionp = tdireccionpr.getText().trim();
        if (nnit.equals("")) {
            tNit.setBackground(Color.red);
            valcampos++;
        }
        if (nombrep.equals("")) {
            tnameprove.setBackground(Color.red);
            valcampos++;
        }
        if (correop.equals("")) {
            tcorreoprov.setBackground(Color.red);
            valcampos++;
        }

        if (telefonop.equals("")) {
            tntelefopro.setBackground(Color.red);
            valcampos++;
        }
        if (direccionp.equals("")) {
            tdireccionpr.setBackground(Color.red);
            valcampos++;
        }
        try {
            Connection cn2 = ConexionBs.conectarb();
            PreparedStatement pst2 = cn2.prepareStatement("select nit from proveedor where nit = '" + nnit + "'");
            ResultSet rs = pst2.executeQuery();
            if (rs.next()) {
                tNit.setBackground(Color.red);
                JOptionPane.showMessageDialog(null, "Nit de proveedor ya existe");
                tNit.setBackground(Color.WHITE);
                tnameprove.setBackground(Color.WHITE);
                tcorreoprov.setBackground(Color.WHITE);
                tntelefopro.setBackground(Color.WHITE);
                tdireccionpr.setBackground(Color.WHITE);
                cn2.close();
            } else {
                cn2.close();
                if (valcampos == 0) {
                    //lexito.setText("Registro con exito");
                    //String nitprovee = tNit.getText();
                    //InProducto iproducto = new InProducto();
                    //iproducto.cbnitproprod.addItem(nitprovee);

                    // iproducto.snitpp(nitprovee); esto no
                    //iproducto.setVisible(true);
                    //this.setVisible(false);
                    try {
                        Connection cn = ConexionBs.conectarb();
                        PreparedStatement pst = cn.prepareStatement(
                                "insert into proveedor values(?,?,?,?,?)");

                        pst.setString(1, tNit.getText().trim());
                        pst.setString(2, tnameprove.getText().trim());
                        pst.setString(3, tdireccionpr.getText().trim());
                        pst.setString(4, tntelefopro.getText().trim());
                        pst.setString(5, tcorreoprov.getText().trim());
                        pst.executeUpdate();

                        tNit.setText("");
                        tnameprove.setText("");
                        tdireccionpr.setText("");
                        tntelefopro.setText("");
                        tcorreoprov.setText("");
                        JOptionPane.showMessageDialog(null, "Registro exitoso");
                        cn.close();
                        model.setRowCount(0);
                        model.setColumnCount(0);
                        try {
                            Connection cnn = ConexionBs.conectarb();
                            PreparedStatement pstt = cnn.prepareStatement(
                                    "select nit, proveedor, direccion, telefono, email from proveedor");
                            ResultSet rss = pstt.executeQuery();
                            trproveeee = new JTable(model);
                            jScrollPane2.setViewportView(trproveeee);
                            model.addColumn("Nit");
                            model.addColumn("Proveedor");
                            model.addColumn("Direccion");
                            model.addColumn("Telefono ");
                            model.addColumn("Email");

                            while (rss.next()) {
                                Object[] fila = new Object[5];
                                for (int i = 0; i < 5; i++) {
                                    fila[i] = rss.getObject(i + 1);
                                }
                                model.addRow(fila);
                            }
                            cnn.close();

                        } catch (SQLException e) {
                            System.err.println("Error al llenar tabla ");
                            JOptionPane.showMessageDialog(null, "Error al mostrar informacion...");
                        }

                    } catch (Exception e) {
                        System.out.println("Error en el boton registrar" + e);
                    }
                } else {
                    JOptionPane.showMessageDialog(null, "Debes llenar todos los campos");
                    tNit.setBackground(Color.WHITE);
                    tnameprove.setBackground(Color.WHITE);
                    tcorreoprov.setBackground(Color.WHITE);
                    tntelefopro.setBackground(Color.WHITE);
                    tdireccionpr.setBackground(Color.WHITE);
                }
            }
        } catch (Exception e) {
            System.out.println("Error en validar nameuser");
            JOptionPane.showMessageDialog(null, "Error al validar, cantacte al administrador");
        }


    }//GEN-LAST:event_bregistrActionPerformed

    private void tNitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tNitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tNitActionPerformed

    private void beliminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_beliminActionPerformed
        String nnit, nombrep, correop, telefonop, direccionp;
        int valcampos = 0;
        nnit = tNit.getText().trim();
        nombrep = tnameprove.getText().trim();
        correop = tcorreoprov.getText().trim();
        telefonop = tntelefopro.getText().trim();
        direccionp = tdireccionpr.getText().trim();
        if (nnit.equals("")) {
            tNit.setBackground(Color.red);
            valcampos++;
        }
        if (nombrep.equals("")) {
            tnameprove.setBackground(Color.red);
            valcampos++;
        }
        if (correop.equals("")) {
            tcorreoprov.setBackground(Color.red);
            valcampos++;
        }

        if (telefonop.equals("")) {
            tntelefopro.setBackground(Color.red);
            valcampos++;
        }
        if (direccionp.equals("")) {
            tdireccionpr.setBackground(Color.red);
            valcampos++;
        }

        if (valcampos == 0) {
            String nittt = tconss.getText().trim();
            if (nittt.equals("")) {
                tconss.setBackground(Color.red);
                JOptionPane.showMessageDialog(null, "No es posible eliminar porque no has ingresado una busqueda");
                tconss.setBackground(Color.WHITE);
            } else {
                try {
                    Connection cn3 = ConexionBs.conectarb();

                    PreparedStatement pst3 = cn3.prepareStatement("select * from proveedor where nit = ?");
                    pst3.setString(1, nittt);
                    ResultSet rs2 = pst3.executeQuery();
                    if (rs2.next()) {
                        cn3.close();
                        try {
                            Connection cn = ConexionBs.conectarb();

                            PreparedStatement pst = cn.prepareStatement(
                                    "delete from proveedor where nit = ?");
                            pst.setString(1, tconss.getText().trim());

                            pst.executeUpdate();
                            tNit.setText("");
                            tnameprove.setText("");
                            tdireccionpr.setText("");
                            tntelefopro.setText("");
                            tcorreoprov.setText("");
                            JOptionPane.showMessageDialog(null, "Registro eliminado");
                            cn.close();
                            model.setRowCount(0);
                            model.setColumnCount(0);
                            try {
                                Connection cnn = ConexionBs.conectarb();
                                PreparedStatement pstt = cnn.prepareStatement(
                                        "select nit, proveedor, direccion, telefono, email from proveedor");
                                ResultSet rss = pstt.executeQuery();
                                trproveeee = new JTable(model);
                                jScrollPane2.setViewportView(trproveeee);
                                model.addColumn("Nit");
                                model.addColumn("Proveedor");
                                model.addColumn("Direccion");
                                model.addColumn("Telefono ");
                                model.addColumn("Email");

                                while (rss.next()) {
                                    Object[] fila = new Object[5];
                                    for (int i = 0; i < 5; i++) {
                                        fila[i] = rss.getObject(i + 1);
                                    }
                                    model.addRow(fila);
                                }
                                cnn.close();

                            } catch (SQLException e) {
                                System.err.println("Error al llenar tabla ");
                                JOptionPane.showMessageDialog(null, "Error al mostrar informacion...");
                            }
                        } catch (Exception e) {
                            System.err.println("Error en el boton eliminar" + e);
                            JOptionPane.showMessageDialog(null, "Error al eliminar, contacte al personal administrativo");

                        }
                    } else {
                        cn3.close();
                        tconss.setBackground(Color.red);
                        JOptionPane.showMessageDialog(null, "El proveedor consultado para eliminar no existe");
                        tconss.setBackground(Color.WHITE);
                    }
                } catch (Exception e) {
                    System.err.println("Error en la consulta de nit " + e);
                    JOptionPane.showMessageDialog(null, "Error al consultar nit, contacte al personal administrativo");

                }

            }
        } else {
            JOptionPane.showMessageDialog(null, "No has realizado ninguna busqueda o hay campos vacios");
            tNit.setBackground(Color.WHITE);
            tnameprove.setBackground(Color.WHITE);
            tcorreoprov.setBackground(Color.WHITE);
            tntelefopro.setBackground(Color.WHITE);
            tdireccionpr.setBackground(Color.WHITE);
        }

    }//GEN-LAST:event_beliminActionPerformed

    private void bbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bbuscarActionPerformed
        String consul = tconss.getText().trim();
        if (consul.equals("")) {
            tconss.setBackground(Color.red);
            JOptionPane.showMessageDialog(null, "No has realizado ninguna busqueda");
            tconss.setBackground(Color.WHITE);
        } else {
            try {
                Connection cn = ConexionBs.conectarb();

                PreparedStatement pst = cn.prepareStatement("select * from proveedor where nit = ?");
                pst.setString(1, tconss.getText().trim());
                ResultSet rs = pst.executeQuery();
                if (rs.next()) {

                    tNit.setText(rs.getString("nit"));
                    tnameprove.setText(rs.getString("proveedor"));
                    tdireccionpr.setText(rs.getString("direccion"));
                    tntelefopro.setText(rs.getString("telefono"));
                    tcorreoprov.setText(rs.getString("email"));

                } else {
                    tconss.setBackground(Color.red);
                    JOptionPane.showMessageDialog(null, "NIT del proveeedor inexistente");
                    tconss.setBackground(Color.WHITE);
                }

            } catch (Exception e) {
                System.err.println("Error en el boton buscar " + e);
                JOptionPane.showMessageDialog(null, "Error al buscar, contacte al personal administrativo");

            }
        }
    }//GEN-LAST:event_bbuscarActionPerformed

    private void bmodifiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bmodifiActionPerformed
        String nnit, nombrep, correop, telefonop, direccionp;
        int valcampos = 0;
        nnit = tNit.getText().trim();
        nombrep = tnameprove.getText().trim();
        correop = tcorreoprov.getText().trim();
        telefonop = tntelefopro.getText().trim();
        direccionp = tdireccionpr.getText().trim();
        if (nnit.equals("")) {
            tNit.setBackground(Color.red);
            valcampos++;
        }
        if (nombrep.equals("")) {
            tnameprove.setBackground(Color.red);
            valcampos++;
        }
        if (correop.equals("")) {
            tcorreoprov.setBackground(Color.red);
            valcampos++;
        }

        if (telefonop.equals("")) {
            tntelefopro.setBackground(Color.red);
            valcampos++;
        }
        if (direccionp.equals("")) {
            tdireccionpr.setBackground(Color.red);
            valcampos++;
        }

        if (valcampos == 0) {
            String nittt = tconss.getText().trim();

            if (nittt.equals("")) {
                tconss.setBackground(Color.red);
                JOptionPane.showMessageDialog(null, "No es posible modificar porque no has ingresado una busqueda");
                tconss.setBackground(Color.WHITE);
            } else {
                try {
                    Connection cn3 = ConexionBs.conectarb();

                    PreparedStatement pst3 = cn3.prepareStatement("select * from proveedor where nit = ?");
                    pst3.setString(1, nittt);
                    ResultSet rs2 = pst3.executeQuery();
                    if (rs2.next()) {
                        cn3.close();
                        try {
                            Connection cn4 = ConexionBs.conectarb();

                            PreparedStatement pst4 = cn4.prepareStatement("select nit from proveedor where nit = ? and not nit = '" + nittt + "'");
                            pst4.setString(1, tNit.getText().trim());
                            ResultSet rs3 = pst4.executeQuery();
                            if (rs3.next()) {
                                //    String vn = rs3.getString("nit");
                                tNit.setBackground(Color.red);
                                JOptionPane.showMessageDialog(null, "El nit de proveedor a modificar ya existe");
                                tNit.setBackground(Color.WHITE);
                                cn4.close();

                            } else {

                                try {
                                    Connection cn = ConexionBs.conectarb();

                                    PreparedStatement pst = cn.prepareStatement(
                                            "update proveedor set nit = ?, proveedor = ?, direccion = ?, telefono = ?, email = ? where nit = '" + nittt + "'");
                                    pst.setString(1, tNit.getText().trim());
                                    pst.setString(2, tnameprove.getText().trim());
                                    pst.setString(3, tdireccionpr.getText().trim());
                                    pst.setString(4, tntelefopro.getText().trim());
                                    pst.setString(5, tcorreoprov.getText().trim());
                                    pst.executeUpdate();
                                    tNit.setText("");
                                    tnameprove.setText("");
                                    tdireccionpr.setText("");
                                    tntelefopro.setText("");
                                    tcorreoprov.setText("");
                                    JOptionPane.showMessageDialog(null, "Registro Actulizado");
                                    cn.close();
                                    model.setRowCount(0);
                                    model.setColumnCount(0);
                                    try {
                                        Connection cnn = ConexionBs.conectarb();
                                        PreparedStatement pstt = cnn.prepareStatement(
                                                "select nit, proveedor, direccion, telefono, email from proveedor");
                                        ResultSet rss = pstt.executeQuery();
                                        trproveeee = new JTable(model);
                                        jScrollPane2.setViewportView(trproveeee);
                                        model.addColumn("Nit");
                                        model.addColumn("Proveedor");
                                        model.addColumn("Direccion");
                                        model.addColumn("Telefono ");
                                        model.addColumn("Email");

                                        while (rss.next()) {
                                            Object[] fila = new Object[5];
                                            for (int i = 0; i < 5; i++) {
                                                fila[i] = rss.getObject(i + 1);
                                            }
                                            model.addRow(fila);
                                        }
                                        cnn.close();

                                    } catch (SQLException e) {
                                        System.err.println("Error al llenar tabla ");
                                        JOptionPane.showMessageDialog(null, "Error al mostrar informacion...");
                                    }
                                } catch (Exception e) {
                                    System.err.println("Error en el boton actualizar" + e);
                                    JOptionPane.showMessageDialog(null, "Error al actaulizar, contacte al personal administrativo");

                                }
                            }
                        } catch (Exception e) {
                            System.err.println("Error en la consulta de nit " + e);
                            JOptionPane.showMessageDialog(null, "Error al consultar nit para modificar, contacte al personal administrativo");

                        }

                    } else {
                        cn3.close();
                        tconss.setBackground(Color.red);
                        JOptionPane.showMessageDialog(null, "El proveedor consultado para actualizar no existe");
                        tconss.setBackground(Color.WHITE);
                    }
                } catch (Exception e) {
                    System.err.println("Error en la consulta de nit " + e);
                    JOptionPane.showMessageDialog(null, "Error al consultar nit, contacte al personal administrativo");

                }

            }
        } else {
            JOptionPane.showMessageDialog(null, "No has realizado ninguna busqueda o hay campos vacios");
            tNit.setBackground(Color.WHITE);
            tnameprove.setBackground(Color.WHITE);
            tcorreoprov.setBackground(Color.WHITE);
            tntelefopro.setBackground(Color.WHITE);
            tdireccionpr.setBackground(Color.WHITE);
        }


    }//GEN-LAST:event_bmodifiActionPerformed

    private void tfilKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfilKeyTyped
        tfil.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent e) {
                trs.setRowFilter(RowFilter.regexFilter("(?i)" + tfil.getText(), 0, 1, 2));
            }

        });
        trs = new TableRowSorter(model);
        trproveeee.setRowSorter(trs);
    }//GEN-LAST:event_tfilKeyTyped

    private void bllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bllActionPerformed
        tNit.setText("");
        tnameprove.setText("");
        tdireccionpr.setText("");
        tntelefopro.setText("");
        tcorreoprov.setText("");
        tconss.setText("");
        tfil.setText("");
    }//GEN-LAST:event_bllActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InProveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InProveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InProveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InProveedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InProveedor().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bbuscar;
    private javax.swing.JButton belimin;
    private javax.swing.JButton bll;
    private javax.swing.JButton bmodifi;
    private javax.swing.JButton bregistr;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lNpro;
    private javax.swing.JLabel lcons;
    private javax.swing.JLabel ldirepro;
    private javax.swing.JLabel lemailpro;
    private javax.swing.JLabel lfbb;
    private javax.swing.JLabel lnombrepro;
    private javax.swing.JLabel lntelefpro;
    private javax.swing.JTextField tNit;
    private javax.swing.JTextField tconss;
    private javax.swing.JTextField tcorreoprov;
    private javax.swing.JTextField tdireccionpr;
    private javax.swing.JTextField tfil;
    private javax.swing.JLabel titledprove;
    private javax.swing.JTextField tnameprove;
    private javax.swing.JTextField tntelefopro;
    private javax.swing.JTable trproveeee;
    // End of variables declaration//GEN-END:variables
}
