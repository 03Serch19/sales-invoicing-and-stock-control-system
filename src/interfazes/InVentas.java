/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfazes;

import clases.ConexionBs;

import java.awt.Color;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.Connection;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import java.util.Calendar;
import java.util.GregorianCalendar;

import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.WindowConstants;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import ventayfactura.Factura;

/**
 *
 * @author ADMIN
 */
public class InVentas extends javax.swing.JFrame {

    int vl = 0;
    float tap = 0;
    TableRowSorter trs;
    DefaultTableModel model = new DefaultTableModel() {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    };
    Calendar fecha_actual = new GregorianCalendar();
    Factura fc = new Factura();

    /**
     * Creates new form InVentas
     */
    public InVentas() {

        initComponents();
        TextPrompt tpcon = new TextPrompt("Venta a eliminar", tbus);
        this.setLocationRelativeTo(null);
        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        this.setTitle("Facturacion y control de ventas - Sistema SME - Sesion de " + InicioSesion.usuario);

        try {
            Connection cn = ConexionBs.conectarb();
            PreparedStatement pst = cn.prepareStatement(
                    "select * from venta");
            ResultSet rs = pst.executeQuery();
            tvventa = new JTable(model);
            jScrollPane1.setViewportView(tvventa);
            model.addColumn("NÂ°Venta");
            model.addColumn("ID_Cliente");
            model.addColumn("Codigo Producto");
            model.addColumn("Cantidad");
            model.addColumn("Fecha");

            while (rs.next()) {
                Object[] fila = new Object[5];
                for (int i = 0; i < 5; i++) {
                    fila[i] = rs.getObject(i + 1);
                }
                model.addRow(fila);
            }
            cn.close();

        } catch (SQLException e) {
            System.err.println("Error al llenar tabla ");
            JOptionPane.showMessageDialog(null, "Error al mostrar informacion...");
        }

        datev.setCalendar(fecha_actual);
        try {
            Connection cn = ConexionBs.conectarb();
            PreparedStatement pst = cn.prepareStatement(
                    "select nombre from cliente");
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {
                String cattv = rs.getString("nombre");
                cbclien.addItem(cattv);

            }
            cn.close();

        } catch (SQLException e) {
            System.err.println("Error al llenar EL COMBOBOX ");
            JOptionPane.showMessageDialog(null, "Error al mostrar informacion...");
        }
        try {
            Connection cn = ConexionBs.conectarb();
            PreparedStatement pst = cn.prepareStatement(
                    "select producto from producto");
            ResultSet rs = pst.executeQuery();

            while (rs.next()) {
                String cattv = rs.getString("producto");
                cbprodu.addItem(cattv);

            }
            cn.close();

        } catch (SQLException e) {
            System.err.println("Error al llenar EL COMBOBOX ");
            JOptionPane.showMessageDialog(null, "Error al mostrar informacion...");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        titleventa = new javax.swing.JLabel();
        lcocli = new javax.swing.JLabel();
        lcant = new javax.swing.JLabel();
        lcprod = new javax.swing.JLabel();
        cbclien = new javax.swing.JComboBox<>();
        cbprodu = new javax.swing.JComboBox<>();
        tfiltro = new javax.swing.JTextField();
        breg = new javax.swing.JButton();
        lfecha = new javax.swing.JLabel();
        datev = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        tvventa = new javax.swing.JTable();
        lcocli1 = new javax.swing.JLabel();
        tcanti1 = new javax.swing.JTextField();
        belimi = new javax.swing.JButton();
        bbuscar = new javax.swing.JButton();
        tbus = new javax.swing.JTextField();
        lcprod1 = new javax.swing.JLabel();
        bca = new javax.swing.JButton();
        bfa = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1055, 450));
        setResizable(false);

        titleventa.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        titleventa.setText("Ingresar nueva venta");

        lcocli.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lcocli.setText("Nombre de cliente:");

        lcant.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lcant.setText("Cantidad a comprar:");

        lcprod.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lcprod.setText("Producto:");

        cbclien.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbclien.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        cbclien.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbclienActionPerformed(evt);
            }
        });

        cbprodu.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cbprodu.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));

        tfiltro.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tfiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfiltroActionPerformed(evt);
            }
        });
        tfiltro.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfiltroKeyTyped(evt);
            }
        });

        breg.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        breg.setText("Registrar");
        breg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bregActionPerformed(evt);
            }
        });

        lfecha.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lfecha.setText("Fecha de compra:");

        datev.setDateFormatString("yyyy-MM-dd HH:mm:ss");
        datev.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        tvventa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tvventa);

        lcocli1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lcocli1.setText("Filtrar busqueda:");

        tcanti1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tcanti1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tcanti1ActionPerformed(evt);
            }
        });

        belimi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        belimi.setText("Eliminar");
        belimi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                belimiActionPerformed(evt);
            }
        });

        bbuscar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bbuscar.setText("Buscar");
        bbuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bbuscarActionPerformed(evt);
            }
        });

        tbus.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tbus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbusActionPerformed(evt);
            }
        });

        lcprod1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lcprod1.setText("Venta a eliminar:");

        bca.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bca.setText("Cancelar Busqueda");
        bca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcaActionPerformed(evt);
            }
        });

        bfa.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bfa.setText("Generar Factura");
        bfa.setToolTipText("");
        bfa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bfaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(breg, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(belimi, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 154, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lfecha, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lcant, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(datev, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 108, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tcanti1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lcprod, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbprodu, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lcocli)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cbclien, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(110, 110, 110)))
                .addComponent(lcocli1)
                .addGap(29, 29, 29)
                .addComponent(tfiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(196, 196, 196))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(339, 339, 339)
                                .addComponent(bca, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(61, 61, 61))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(lcprod1)
                                .addGap(33, 33, 33)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tbus, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(bbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(bfa, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(450, 450, 450)
                        .addComponent(jScrollPane1)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(395, 395, 395)
                .addComponent(titleventa, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleventa, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(7, 7, 7))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lcocli1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(tfiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lcocli, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cbclien, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lcprod, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbprodu, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(11, 11, 11)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lfecha, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lcant, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(tcanti1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(23, 23, 23)
                                .addComponent(datev, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(breg, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bbuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(belimi, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lcprod1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tbus, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bca, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(bfa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(24, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfiltroActionPerformed

    }//GEN-LAST:event_tfiltroActionPerformed

    private void bregActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bregActionPerformed

        cbclien.setEnabled(true);
        cbprodu.setEnabled(true);
        tcanti1.setEnabled(true);
        datev.setEnabled(true);
        String ncliente, nproducto, canti;
        ncliente = cbclien.getSelectedItem().toString();
        nproducto = cbprodu.getSelectedItem().toString();
        canti = tcanti1.getText().trim();

        int vall = 0;
        if (ncliente.equals("")) {
            vall++;
        }
        if (nproducto.equals("")) {
            vall++;
        }
        if (canti.equals("")) {
            tcanti1.setBackground(Color.red);
            vall++;
        }
        if (vall == 0) {
            try {
                Connection cn2 = ConexionBs.conectarb();
                PreparedStatement pst2 = cn2.prepareStatement("select id from cliente where nombre = '" + ncliente + "'");

                ResultSet rs = pst2.executeQuery();
                if (rs.next()) {
                    String cliee = rs.getString("id");
                    cn2.close();
                    try {
                        Connection cn3 = ConexionBs.conectarb();
                        PreparedStatement pst3 = cn3.prepareStatement("select codigo from producto where producto = '" + nproducto + "'");
                        ResultSet rs2 = pst3.executeQuery();
                        if (rs2.next()) {

                            String produu = rs2.getString("codigo");
                            cn3.close();
                            try {
                                Connection cn5 = ConexionBs.conectarb();
                                PreparedStatement pst4 = cn5.prepareStatement("select precio from producto where producto = '" + nproducto + "'");
                                ResultSet rs3 = pst4.executeQuery();
                                if (rs3.next()) {
                                    float prepre = rs3.getFloat("precio");
                                    String prepe = String.valueOf(prepre);

                                    cn5.close();
                                    int cccann = Integer.parseInt(canti);
                                    float tt = prepre * cccann;
                                    try {
                                        Connection cn = ConexionBs.conectarb();
                                        PreparedStatement pst = cn.prepareStatement(
                                                "insert into venta values(?,?,?,?,?,?)");
                                        pst.setString(1, "0");
                                        pst.setString(2, cliee);
                                        pst.setString(3, produu);
                                        pst.setString(4, tcanti1.getText().trim());
                                        pst.setString(5, ((JTextField) datev.getDateEditor().getUiComponent()).getText());
                                        pst.setFloat(6, tt);
                                        pst.executeUpdate();

                                        tcanti1.setText("");
                                        //cbclien.setSelectedIndex(0);
                                        cbprodu.setSelectedIndex(0);

                                        JOptionPane.showMessageDialog(null, "Venta exitosa, Registro finalizado");
                                        cn.close();
                                        vl++;
                                        //conexion a factura

                                        if (vl == 1) {
                                            fc.cerrarr();
                                            fc.pro.setVisible(true);
                                            fc.tcanti.setVisible(true);
                                            fc.ttotal.setVisible(true);
                                            fc.tprecio.setVisible(true);

                                            fc.id_cliente.setText(cliee);
                                            fc.nombre_cliente.setText(ncliente);
                                            fc.pro.setText(nproducto);
                                            fc.tcanti.setText(canti);
                                            fc.ttotal.setText(String.valueOf(tt));
                                            fc.tprecio.setText(prepe);
                                            tap = tt;
                                            fc.ttapagar.setText(String.valueOf(tap));

                                        } else if (vl == 2) {
                                            fc.pro2.setVisible(true);
                                            fc.tcanti2.setVisible(true);
                                            fc.ttotal2.setVisible(true);
                                            fc.tprecio2.setVisible(true);

                                            fc.id_cliente.setText(cliee);
                                            fc.nombre_cliente.setText(ncliente);
                                            fc.pro2.setText(nproducto);
                                            fc.tcanti2.setText(canti);
                                            fc.ttotal2.setText(String.valueOf(tt));
                                            fc.tprecio2.setText(prepe);
                                            tap = tt + tap;
                                            fc.ttapagar.setText(String.valueOf(tap));

                                        } else if (vl == 3) {
                                            fc.pro3.setVisible(true);
                                            fc.tcanti3.setVisible(true);
                                            fc.ttotal3.setVisible(true);
                                            fc.tprecio3.setVisible(true);

                                            fc.id_cliente.setText(cliee);
                                            fc.nombre_cliente.setText(ncliente);
                                            fc.pro3.setText(nproducto);
                                            fc.tcanti3.setText(canti);
                                            fc.ttotal3.setText(String.valueOf(tt));
                                            fc.tprecio3.setText(prepe);
                                            tap = tt + tap;
                                            fc.ttapagar.setText(String.valueOf(tap));

                                        } else if (vl == 4) {
                                            fc.pro4.setVisible(true);
                                            fc.tcanti4.setVisible(true);
                                            fc.ttotal4.setVisible(true);
                                            fc.tprecio4.setVisible(true);

                                            fc.id_cliente.setText(cliee);
                                            fc.nombre_cliente.setText(ncliente);
                                            fc.pro4.setText(nproducto);
                                            fc.tcanti4.setText(canti);
                                            fc.ttotal4.setText(String.valueOf(tt));
                                            fc.tprecio4.setText(prepe);
                                            tap = tt + tap;
                                            fc.ttapagar.setText(String.valueOf(tap));

                                        } else if (vl == 5) {
                                            fc.pro5.setVisible(true);
                                            fc.tcanti5.setVisible(true);
                                            fc.ttotal5.setVisible(true);
                                            fc.tprecio5.setVisible(true);

                                            fc.id_cliente.setText(cliee);
                                            fc.nombre_cliente.setText(ncliente);
                                            fc.pro5.setText(nproducto);
                                            fc.tcanti5.setText(canti);
                                            fc.ttotal5.setText(String.valueOf(tt));
                                            fc.tprecio5.setText(prepe);
                                            tap = tt + tap;
                                            fc.ttapagar.setText(String.valueOf(tap));

                                        } else if (vl == 6) {
                                            fc.pro6.setVisible(true);
                                            fc.tcanti6.setVisible(true);
                                            fc.ttotal6.setVisible(true);
                                            fc.tprecio6.setVisible(true);

                                            fc.id_cliente.setText(cliee);
                                            fc.nombre_cliente.setText(ncliente);
                                            fc.pro6.setText(nproducto);
                                            fc.tcanti6.setText(canti);
                                            fc.ttotal6.setText(String.valueOf(tt));
                                            fc.tprecio6.setText(prepe);
                                            tap = tt + tap;
                                            fc.ttapagar.setText(String.valueOf(tap));

                                        } else if (vl == 7) {
                                            fc.pro7.setVisible(true);
                                            fc.tcanti7.setVisible(true);
                                            fc.ttotal7.setVisible(true);
                                            fc.tprecio7.setVisible(true);

                                            fc.id_cliente.setText(cliee);
                                            fc.nombre_cliente.setText(ncliente);
                                            fc.pro7.setText(nproducto);
                                            fc.tcanti7.setText(canti);
                                            fc.ttotal7.setText(String.valueOf(tt));
                                            fc.tprecio7.setText(prepe);
                                            tap = tt + tap;
                                            fc.ttapagar.setText(String.valueOf(tap));

                                        } else if (vl == 8) {
                                            fc.pro8.setVisible(true);
                                            fc.tcanti8.setVisible(true);
                                            fc.ttotal8.setVisible(true);
                                            fc.tprecio8.setVisible(true);

                                            fc.id_cliente.setText(cliee);
                                            fc.nombre_cliente.setText(ncliente);
                                            fc.pro8.setText(nproducto);
                                            fc.tcanti8.setText(canti);
                                            fc.ttotal8.setText(String.valueOf(tt));
                                            fc.tprecio8.setText(prepe);
                                            tap = tt + tap;
                                            fc.ttapagar.setText(String.valueOf(tap));

                                        } else if (vl == 9) {
                                            fc.pro9.setVisible(true);
                                            fc.tcanti9.setVisible(true);
                                            fc.ttotal9.setVisible(true);
                                            fc.tprecio9.setVisible(true);

                                            fc.id_cliente.setText(cliee);
                                            fc.nombre_cliente.setText(ncliente);
                                            fc.pro9.setText(nproducto);
                                            fc.tcanti9.setText(canti);
                                            fc.ttotal9.setText(String.valueOf(tt));
                                            fc.tprecio9.setText(prepe);
                                            tap = tt + tap;
                                            fc.ttapagar.setText(String.valueOf(tap));

                                        }
                                        // String totalll;
                                        //  fc.ttotal.setText();

                                        /*fc.copro(produu);
                                fc.nop(nproducto);
                                fc.cantid(canti);  */
                                        // fc.copro(produu);
                                        ////////////    
                                        model.setRowCount(0);
                                        model.setColumnCount(0);
                                        try {
                                            Connection cnn = ConexionBs.conectarb();
                                            PreparedStatement pstt = cnn.prepareStatement(
                                                    "select * from venta");
                                            ResultSet rss = pstt.executeQuery();
                                            tvventa = new JTable(model);
                                            jScrollPane1.setViewportView(tvventa);
                                            model.addColumn("NÂ°Venta");
                                            model.addColumn("ID_Cliente");
                                            model.addColumn("Codigo Producto");
                                            model.addColumn("Cantidad");
                                            model.addColumn("Fecha");

                                            while (rss.next()) {
                                                Object[] fila = new Object[5];
                                                for (int i = 0; i < 5; i++) {
                                                    fila[i] = rss.getObject(i + 1);
                                                }
                                                model.addRow(fila);
                                            }
                                            cnn.close();

                                        } catch (SQLException e) {
                                            System.err.println("Error al llenar tabla ");
                                            JOptionPane.showMessageDialog(null, "Error al mostrar informacion...");
                                        }

                                    } catch (Exception e) {
                                        System.out.println("Error en el boton registrar" + e);
                                        JOptionPane.showMessageDialog(null, "Error al registrar");
                                    }

                                } else {
                                    JOptionPane.showMessageDialog(null, "fallo consulta de precio");

                                }

                            } catch (Exception e) {
                                System.out.println("Error en encontrar el precio");
                            }

                        } else {
                            cn3.close();
                            JOptionPane.showMessageDialog(null, "No se encontro el codigo");
                        }
                    } catch (Exception e) {
                        System.err.println("Error en consultar codigo producto");
                        JOptionPane.showMessageDialog(null, "Error en la consulta de codigo producto");
                    }

                } else {
                    cn2.close();
                    JOptionPane.showMessageDialog(null, "No se encontro el id");
                }

            } catch (Exception e) {
                System.err.println("Error en consultar idcliente");
                JOptionPane.showMessageDialog(null, "Error en la consulta de id cliente");
            }
        } else {

            JOptionPane.showMessageDialog(null, "Debes llenar todos los campos");
            tcanti1.setBackground(Color.WHITE);
        }

    }//GEN-LAST:event_bregActionPerformed

    private void cbclienActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbclienActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbclienActionPerformed

    private void tcanti1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tcanti1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tcanti1ActionPerformed

    private void belimiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_belimiActionPerformed

        String ncliente, nproducto, canti;
        ncliente = cbclien.getSelectedItem().toString();
        nproducto = cbprodu.getSelectedItem().toString();
        canti = tcanti1.getText().trim();
        int vall = 0;
        if (ncliente.equals("")) {
            vall++;
        }
        if (nproducto.equals("")) {
            vall++;
        }
        if (canti.equals("")) {
            tcanti1.setBackground(Color.red);
            vall++;
        }
        if (vall == 0) {
            String consul = tbus.getText().trim();
            if (consul.equals("")) {
                tbus.setBackground(Color.red);
                JOptionPane.showMessageDialog(null, "No es posible eliminar porque no has ingresado una busqueda");
                tbus.setBackground(Color.WHITE);
            } else {
                int CONSS = Integer.parseInt(consul);
                try {
                    Connection cn2 = ConexionBs.conectarb();
                    PreparedStatement pst2 = cn2.prepareStatement("select * from venta where venta = '" + CONSS + "'");

                    ResultSet rs = pst2.executeQuery();
                    if (rs.next()) {
                        //   String cliee = rs.getString("");
                        cn2.close();
                        try {
                            Connection cn = ConexionBs.conectarb();

                            PreparedStatement pst = cn.prepareStatement(
                                    "delete from venta where venta = ?");
                            pst.setString(1, tbus.getText().trim());

                            pst.executeUpdate();
                            tcanti1.setText("");

                            cbclien.setSelectedIndex(0);
                            cbprodu.setSelectedIndex(0);
                            JOptionPane.showMessageDialog(null, "Registro eliminado");
                            cbclien.setEnabled(true);
                            cbprodu.setEnabled(true);
                            tcanti1.setEnabled(true);
                            datev.setEnabled(true);
                            model.setRowCount(0);
                            model.setColumnCount(0);
                            try {
                                Connection cnn = ConexionBs.conectarb();
                                PreparedStatement pstt = cnn.prepareStatement(
                                        "select * from venta");
                                ResultSet rss = pstt.executeQuery();
                                tvventa = new JTable(model);
                                jScrollPane1.setViewportView(tvventa);
                                model.addColumn("NÂ°Venta");
                                model.addColumn("ID_Cliente");
                                model.addColumn("Codigo Producto");
                                model.addColumn("Cantidad");
                                model.addColumn("Fecha");

                                while (rss.next()) {
                                    Object[] fila = new Object[5];
                                    for (int i = 0; i < 5; i++) {
                                        fila[i] = rss.getObject(i + 1);
                                    }
                                    model.addRow(fila);
                                }
                                cnn.close();

                            } catch (SQLException e) {
                                System.err.println("Error al llenar tabla ");
                                JOptionPane.showMessageDialog(null, "Error al mostrar informacion...");
                            }
                        } catch (Exception e) {
                            System.err.println("Error en el boton eliminar" + e);
                            JOptionPane.showMessageDialog(null, "Error al eliminar, contacte al personal administrativo");

                        }

                    } else {
                        cn2.close();
                        JOptionPane.showMessageDialog(null, "La venta no existe");
                    }

                } catch (Exception e) {
                    System.err.println("Error en consultar nÂ° venta");
                    JOptionPane.showMessageDialog(null, "Error en la consulta venta");
                }
            }
        } else {

            JOptionPane.showMessageDialog(null, "Hay campos vacios o no hay busquedas");
            tcanti1.setBackground(Color.WHITE);
        }

    }//GEN-LAST:event_belimiActionPerformed

    private void bbuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bbuscarActionPerformed
        String consul = tbus.getText().trim();
        if (consul.equals("")) {
            tbus.setBackground(Color.red);
            JOptionPane.showMessageDialog(null, "No has realizado ninguna busqueda");
            tbus.setBackground(Color.WHITE);
        } else {
            int CONSS = Integer.parseInt(consul);
            try {
                Connection cn = ConexionBs.conectarb();

                PreparedStatement pst = cn.prepareStatement("select * from venta where venta = ?");
                pst.setInt(1, CONSS);
                ResultSet rs = pst.executeQuery();
                if (rs.next()) {
                    String idcc = rs.getString("id_cliente");
                    String copro = rs.getString("codigo_producto");
                    try {
                        Connection cn2 = ConexionBs.conectarb();
                        PreparedStatement pst2 = cn2.prepareStatement("select nombre from cliente where id = ?");
                        pst2.setString(1, idcc);
                        ResultSet rs2 = pst2.executeQuery();
                        if (rs2.next()) {
                            try {
                                Connection cn3 = ConexionBs.conectarb();
                                PreparedStatement pst3 = cn3.prepareStatement("select producto from producto where codigo = ?");
                                pst3.setString(1, copro);
                                ResultSet rs3 = pst3.executeQuery();
                                if (rs3.next()) {
                                    cbclien.setSelectedItem(rs2.getString("nombre"));
                                    cbprodu.setSelectedItem(rs3.getString("producto"));
                                    tcanti1.setText(rs.getString("cantidad"));

                                    cn2.close();
                                    cn.close();
                                    cn3.close();
                                    cbclien.setEnabled(false);
                                    cbprodu.setEnabled(false);
                                    tcanti1.setEnabled(false);
                                    datev.setEnabled(false);
                                } else {
                                    tbus.setBackground(Color.red);
                                    JOptionPane.showMessageDialog(null, "No se encontro el codigo");
                                    tbus.setBackground(Color.WHITE);
                                }
                            } catch (Exception e) {
                                System.err.println("Error en la busqueda del codigo");
                                JOptionPane.showMessageDialog(null, "Error en la busqueda del codigo..");
                            }

                        } else {
                            tbus.setBackground(Color.red);
                            JOptionPane.showMessageDialog(null, "No se encontro el nombre");
                            tbus.setBackground(Color.WHITE);
                        }
                    } catch (Exception e) {
                        System.err.println("Error en la busqueda del nombre");
                        JOptionPane.showMessageDialog(null, "Error en la busqueda del nombre...");
                    }

                } else {
                    tbus.setBackground(Color.red);
                    JOptionPane.showMessageDialog(null, "No se encontro la venta");
                    tbus.setBackground(Color.WHITE);

                }

            } catch (Exception e) {
                System.err.println("Error en el boton buscar " + e);
                JOptionPane.showMessageDialog(null, "Error al buscar, contacte al personal administrativo");

            }
        }
    }//GEN-LAST:event_bbuscarActionPerformed

    private void tbusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbusActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbusActionPerformed

    private void bcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcaActionPerformed
        cbclien.setEnabled(true);
        cbprodu.setEnabled(true);
        tcanti1.setEnabled(true);
        datev.setEnabled(true);
        tcanti1.setText("");

        cbclien.setSelectedIndex(0);
        cbprodu.setSelectedIndex(0);
    }//GEN-LAST:event_bcaActionPerformed

    private void tfiltroKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfiltroKeyTyped

        tfiltro.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(KeyEvent e) {
                trs.setRowFilter(RowFilter.regexFilter("(?i)" + tfiltro.getText(), 0, 1));
            }

        });
        trs = new TableRowSorter(model);
        tvventa.setRowSorter(trs);
    }//GEN-LAST:event_tfiltroKeyTyped

    private void bfaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bfaActionPerformed
        fc.setVisible(true);
        if (vl == 0) {
            
            fc.setVisible(true);
            fc.id_cliente.setText("");
            fc.nombre_cliente.setText("");
            fc.ttapagar.setText("");
           fc.cerrarr();

        }
        vl = 0;
        cbclien.setSelectedIndex(0);


    }//GEN-LAST:event_bfaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InVentas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InVentas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bbuscar;
    private javax.swing.JButton bca;
    private javax.swing.JButton belimi;
    private javax.swing.JButton bfa;
    private javax.swing.JButton breg;
    private javax.swing.JComboBox<String> cbclien;
    private javax.swing.JComboBox<String> cbprodu;
    private com.toedter.calendar.JDateChooser datev;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lcant;
    private javax.swing.JLabel lcocli;
    private javax.swing.JLabel lcocli1;
    private javax.swing.JLabel lcprod;
    private javax.swing.JLabel lcprod1;
    private javax.swing.JLabel lfecha;
    private javax.swing.JTextField tbus;
    private javax.swing.JTextField tcanti1;
    private javax.swing.JTextField tfiltro;
    private javax.swing.JLabel titleventa;
    private javax.swing.JTable tvventa;
    // End of variables declaration//GEN-END:variables
}
